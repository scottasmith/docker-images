#!/bin/sh
set -e

confDir=/usr/local/etc/php
extDir="$(php -d 'display_errors=stderr' -r 'echo ini_get("extension_dir");')"

##
# Enable XDebug
# 
# Parameters:
#  xdebug ide key (optional, default PHPSTORM)
#  xdebug_client_host (optional, default host.docker.internal)
##
function enable_xdebug() {
    local xdebug_ide_key=${1:-""}
    local xdebug_client_host=${2:-""}

    echo "zend_extension=${extDir}/xdebug.so" > ${confDir}/conf.d/docker-php-ext-xdebug.ini

    if [ "" != "$xdebug_ide_key" ]; then
        sed -i "s/xdebug.idekey=PHPSTORM/xdebug.idekey=${xdebug_ide_key}/" ${confDir}/conf.d/xdebug.ini
    fi

    if [ "" != "$xdebug_client_host" ]; then
        sed -i "s/xdebug.client_host=host.docker.internal/xdebug.client_host=${xdebug_client_host}/" ${confDir}/conf.d/xdebug.ini
    fi

    xdebug_grep_host=$(grep "xdebug.client_host=" ${confDir}/conf.d/xdebug.ini | awk -F= '{ print $2 }')
    xdebug_grep_port=$(grep "xdebug.client_port" ${confDir}/conf.d/xdebug.ini | awk -F= '{ print $2 }')
    echo "XDebug enabled. Client: ${xdebug_grep_host}:${xdebug_grep_port}"
}

##
# Enable Opcache
#
function enable_opcache() {
    echo "zend_extension=${extDir}/opcache.so" > ${confDir}/conf.d/docker-php-ext-opcache.ini
    echo "ZendOpcache enabled"
}

##
# Enable MongoDB
#
function enable_mongodb() {
    echo "extension=mongodb.so" > ${confDir}/conf.d/docker-php-ext-mongodb.ini
    echo "MongoDB enabled"
}

##
# Set www-data user
# 
# Parameters:
#  uid
#  gid (optional)
##
function set_wwwdata_user() {
    local uid=${1}
    local gid=${2:-""}

    usermod -u $uid www-data

    if [ "x" != "x${gid}" ]; then
        usermod -g $gid -u $gid www-data
    fi
}
